<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{71E5BFD2-313E-4F97-8284-50083EC735E6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>TravelHubApi.Sdk.Client</RootNamespace>
    <AssemblyName>TravelHubApiSDK</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
    <StyleCopTreatErrorsAsWarnings>False</StyleCopTreatErrorsAsWarnings>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <NuGetPackageImportStamp>808f7368</NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="StyleCop.CSharp, Version=4.7.1000.0, Culture=neutral, PublicKeyToken=f904653c63bc2738, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\StyleCop.4.7.49.0\lib\net35\StyleCop.CSharp.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Net" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="TravelHubApiClient.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\common\src\Common\Common.csproj">
      <Project>{19d34303-1692-427e-a414-339bfc44aa25}</Project>
      <Name>Common</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\..\hotel\src\Hotel\Hotel.csproj">
      <Project>{3ae35f29-0b56-4de1-9b74-7998d71dc29d}</Project>
      <Name>Hotel</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\..\oauth\src\OAuth\OAuth.csproj">
      <Project>{57a1ba12-eb63-4c26-9e50-6f39caae643e}</Project>
      <Name>OAuth</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- Nuget auto publish start -->
  <PropertyGroup>
    <NugetExe>nuget</NugetExe>
    <NugetExe Condition="Exists('$(SolutionDir).nuget\NuGet.exe')">$(SolutionDir).nuget\NuGet.exe</NugetExe>
  </PropertyGroup>
  <PropertyGroup>
    <NugetOutputDirectory>$(SolutionDir)nupkgs\$(ConfigurationName)</NugetOutputDirectory>
  </PropertyGroup>
  <Target Name="BeforeBuild">
    <MakeDir Directories="$(NugetOutputDirectory)" Condition="!Exists('$(NugetOutputDirectory)')" />
  </Target>
  <Target Name="GeneratePackage">
    <!-- Publish the nupkg to the well known NuGet server
          Note: "nuget setApiKey {put-your-api-key-here} -Source http://My_Nuget_Gallery_Service_Url/" must be run prior on the machine to ensure the api key is set correctly. -->
    <Exec WorkingDirectory="$(PackageDir)" Command="$(NugetExe) pack &quot;$(ProjectPath)&quot; -Properties Configuration=&quot;$(ConfigurationName)&quot; -IncludeReferencedProjects -Output &quot;$(NugetOutputDirectory)&quot;" />
  </Target>
  <Target Name="Publish">
    <!-- Publish the nupkg to the well known NuGet server
          Note: "nuget setApiKey {put-your-api-key-here} -Source http://My_Nuget_Gallery_Service_Url/" must be run prior on the machine to ensure the api key is set correctly. -->
    <Exec WorkingDirectory="$(PackageDir)" Command="$(NugetExe) push &quot;$(NugetOutputDirectory)\$(AssemblyName).%(OutputAssemblyInfo.Version).nupkg&quot;" />
  </Target>
  <Target Name="GetAssemblyInfo">
    <!-- Load up the information from the assembly -->
    <GetAssemblyIdentity AssemblyFiles="$(OutputPath)$(AssemblyName).dll">
      <Output TaskParameter="Assemblies" ItemName="OutputAssemblyInfo" />
    </GetAssemblyIdentity>
    <Message Text="Info: %(OutputAssemblyInfo.Version)" />
  </Target>
  <Target Name="AfterBuild">
    <CallTarget Targets="GetAssemblyInfo" />
    <CallTarget Targets="GeneratePackage" />
    <CallTarget Targets="Publish" Condition="'$(ConfigurationName)' == 'PublishPackage'" />
  </Target>
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
    <Error Condition="!Exists('..\..\..\packages\StyleCop.MSBuild.4.7.54.0\build\StyleCop.MSBuild.Targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\..\packages\StyleCop.MSBuild.4.7.54.0\build\StyleCop.MSBuild.Targets'))" />
  </Target>
  <Import Project="..\..\..\packages\StyleCop.MSBuild.4.7.54.0\build\StyleCop.MSBuild.Targets" Condition="Exists('..\..\..\packages\StyleCop.MSBuild.4.7.54.0\build\StyleCop.MSBuild.Targets')" />
  <!-- Nuget auto publish end -->
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>